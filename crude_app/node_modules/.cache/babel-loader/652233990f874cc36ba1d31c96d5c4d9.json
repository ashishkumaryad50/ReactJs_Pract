{"ast":null,"code":"let initialState = {\n  data: [],\n  isFirstCall: true\n};\n\nconst listReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'FIRSTCALL') {\n    return { ...state,\n      isFirstCall: action.isFirstCall\n    };\n  }\n\n  if (action.type === 'DELETE_ITEM') {\n    return { ...state,\n      data: state.data.filter(item => item.id !== action.id)\n    };\n  }\n\n  if (action.type === 'UPDATE_ITEM') {\n    index = state.data.findIndex(_ref => {\n      let {\n        id\n      } = _ref;\n      return name === object.name && id === object.id;\n    });\n    return { ...state,\n      data: state.data.filter(item => item.id === action.id)\n    };\n  }\n\n  if (action.type === 'DATA_ADDED') {\n    return { ...state,\n      data: [...state.data, action.items]\n    };\n  }\n\n  if (action.type === 'DATA_RECEIVED') {\n    return { ...state,\n      data: action.items\n    };\n  }\n\n  return state;\n};\n\nexport default listReducer;","map":{"version":3,"sources":["C:/Users/Ashis/Desktop/ReactJs_Pract/crude_app/src/store/listReducer.js"],"names":["initialState","data","isFirstCall","listReducer","state","action","type","filter","item","id","index","findIndex","name","object","items"],"mappings":"AAAA,IAAIA,YAAY,GAAG;AACfC,EAAAA,IAAI,EAAE,EADS;AAEfC,EAAAA,WAAW,EAAE;AAFE,CAAnB;;AAKA,MAAMC,WAAW,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAClD,MAAIA,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAC7B,WAAO,EACH,GAAGF,KADA;AACOF,MAAAA,WAAW,EAAEG,MAAM,CAACH;AAD3B,KAAP;AAGH;;AACD,MAAIG,MAAM,CAACC,IAAP,KAAgB,aAApB,EAAmC;AAC/B,WAAO,EACH,GAAGF,KADA;AAEHH,MAAAA,IAAI,EAAEG,KAAK,CAACH,IAAN,CAAWM,MAAX,CAAmBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYJ,MAAM,CAACI,EAA/C;AAFH,KAAP;AAIH;;AAED,MAAIJ,MAAM,CAACC,IAAP,KAAgB,aAApB,EAAmC;AAC/BI,IAAAA,KAAK,GAAGN,KAAK,CAACH,IAAN,CAAWU,SAAX,CAAqB;AAAA,UAAC;AAAEF,QAAAA;AAAF,OAAD;AAAA,aAAYG,IAAI,KAAKC,MAAM,CAACD,IAAhB,IAAwBH,EAAE,KAAKI,MAAM,CAACJ,EAAlD;AAAA,KAArB,CAAR;AAEA,WAAO,EACH,GAAGL,KADA;AAEHH,MAAAA,IAAI,EAAEG,KAAK,CAACH,IAAN,CAAWM,MAAX,CAAmBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYJ,MAAM,CAACI,EAA/C;AAFH,KAAP;AAIH;;AAED,MAAIJ,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAC9B,WAAO,EAAE,GAAGF,KAAL;AAAYH,MAAAA,IAAI,EAAE,CAAC,GAAGG,KAAK,CAACH,IAAV,EAAgBI,MAAM,CAACS,KAAvB;AAAlB,KAAP;AACH;;AACD,MAAIT,MAAM,CAACC,IAAP,KAAgB,eAApB,EAAqC;AACjC,WAAO,EAAE,GAAGF,KAAL;AAAYH,MAAAA,IAAI,EAAEI,MAAM,CAACS;AAAzB,KAAP;AACH;;AACD,SAAOV,KAAP;AACH,CA7BD;;AA+BA,eAAeD,WAAf","sourcesContent":["let initialState = {\r\n    data: [],\r\n    isFirstCall: true\r\n}\r\n\r\nconst listReducer = (state = initialState, action) => {\r\n    if (action.type === 'FIRSTCALL') {\r\n        return {\r\n            ...state, isFirstCall: action.isFirstCall\r\n        };\r\n    }\r\n    if (action.type === 'DELETE_ITEM') {\r\n        return {\r\n            ...state,\r\n            data: state.data.filter((item) => item.id !== action.id)\r\n        };\r\n    }\r\n\r\n    if (action.type === 'UPDATE_ITEM') {\r\n        index = state.data.findIndex(({ id }) => name === object.name && id === object.id);\r\n\r\n        return {\r\n            ...state,\r\n            data: state.data.filter((item) => item.id === action.id)\r\n        };\r\n    }\r\n\r\n    if (action.type === 'DATA_ADDED') {\r\n        return { ...state, data: [...state.data, action.items] }\r\n    }\r\n    if (action.type === 'DATA_RECEIVED') {\r\n        return { ...state, data: action.items }\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default listReducer;\r\n"]},"metadata":{},"sourceType":"module"}