{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ashis\\\\Desktop\\\\ReactJs_Pract\\\\crude_app\\\\src\\\\Components\\\\ListData.js\",\n    _s = $RefreshSig$();\n\nimport './NewData.css';\nimport \"./ShowData.css\";\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ListData = props => {\n  _s();\n\n  const [oldData, setOldData] = useState(props.rawData);\n  const [keyVal, setKeyVal] = useState(props.keyId);\n  const [fstName, setFstName] = useState(props.firstName);\n  const [lstName, setLstName] = useState(props.lastName);\n  const [emailId, setEmaiId] = useState(props.emailData);\n  const [isActive, setIaActive] = useState(false);\n  const [btnActive, setbtnActive] = useState(true);\n  const dispatch = useDispatch();\n  console.log(props.keyId); // const infoList = useSelector((state) => state.data);\n\n  function removeHandler(keyVal) {\n    dispatch({\n      type: 'DELETE_ITEM',\n      id: keyVal\n    }); // console.log(keyVal)\n  }\n\n  const cancelEditHandler = () => {\n    setKeyVal(props.keyId);\n    setFstName(props.firstName);\n    setLstName(props.lastName);\n    setEmaiId(props.emailData);\n    setbtnActive(true);\n    setIaActive(false);\n  };\n\n  const editFirstNameHandler = event => {\n    setFstName(event.target.value);\n  };\n\n  const editLastNameHandler = event => {\n    setLstName(event.target.value);\n  };\n\n  const editEmailHandler = event => {\n    setEmaiId(event.target.value);\n  };\n\n  const editActiveHandler = () => {\n    setIaActive(true);\n    setbtnActive(false);\n  };\n\n  function saveEditHandler(keyVal) {\n    const newObj = {\n      id: keyVal,\n      first_name: fstName,\n      last_name: lstName,\n      email: emailId\n    };\n    console.log(oldData); // oldData\n\n    const index = oldData.findIndex(el => {\n      return el.id == keyVal;\n    }); // const newData = oldData;\n\n    oldData[index] = newObj;\n    dispatch({\n      type: 'UPDATE_ITEM',\n      editedData: newObj\n    });\n    setIaActive(true);\n    setbtnActive(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"showdata-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-newdata__controls\",\n          onClick: editActiveHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"new-newdata__control\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: fstName,\n              readOnly: isActive ? false : true,\n              onChange: editFirstNameHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"new-newdata__control\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: lstName,\n              readOnly: isActive ? false : true,\n              onChange: editLastNameHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"new-newdata__control\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              value: emailId,\n              readOnly: isActive ? false : true,\n              onChange: editEmailHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), isActive && !btnActive && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"showdata-item__btnBlue\",\n          style: {},\n          onClick: () => saveEditHandler(keyVal),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 44\n        }, this), isActive && !btnActive && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"showdata-item__btnRed\",\n          onClick: cancelEditHandler,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 44\n        }, this), !isActive && btnActive && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"showdata-item__btnRed\",\n          onClick: () => removeHandler(keyVal),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)\n    }, keyVal, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(ListData, \"Y9OxrSXc5iPc8lT7ALhg4gkK87E=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ListData;\nexport default ListData;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListData\");","map":{"version":3,"sources":["C:/Users/Ashis/Desktop/ReactJs_Pract/crude_app/src/Components/ListData.js"],"names":["React","useState","useSelector","useDispatch","ListData","props","oldData","setOldData","rawData","keyVal","setKeyVal","keyId","fstName","setFstName","firstName","lstName","setLstName","lastName","emailId","setEmaiId","emailData","isActive","setIaActive","btnActive","setbtnActive","dispatch","console","log","removeHandler","type","id","cancelEditHandler","editFirstNameHandler","event","target","value","editLastNameHandler","editEmailHandler","editActiveHandler","saveEditHandler","newObj","first_name","last_name","email","index","findIndex","el","editedData"],"mappings":"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","sourcesContent":["import './NewData.css'\r\nimport \"./ShowData.css\";\r\nimport React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst ListData = (props) => {\r\n    const [oldData, setOldData] = useState(props.rawData)\r\n    const [keyVal, setKeyVal] = useState(props.keyId);\r\n    const [fstName, setFstName] = useState(props.firstName);\r\n    const [lstName, setLstName] = useState(props.lastName);\r\n    const [emailId, setEmaiId] = useState(props.emailData);\r\n    const [isActive, setIaActive] = useState(false);\r\n    const [btnActive, setbtnActive] = useState(true);\r\n    const dispatch = useDispatch();\r\n    console.log(props.keyId)\r\n    // const infoList = useSelector((state) => state.data);\r\n    function removeHandler(keyVal) {\r\n        dispatch({\r\n            type: 'DELETE_ITEM', id: keyVal\r\n        });\r\n        // console.log(keyVal)\r\n    }\r\n    const cancelEditHandler = () => {\r\n        setKeyVal(props.keyId);\r\n        setFstName(props.firstName);\r\n        setLstName(props.lastName);\r\n        setEmaiId(props.emailData);\r\n        setbtnActive(true);\r\n        setIaActive(false);\r\n    }\r\n    const editFirstNameHandler = (event) => {\r\n        setFstName(event.target.value);\r\n    }\r\n    const editLastNameHandler = (event) => {\r\n        setLstName(event.target.value);\r\n    }\r\n    const editEmailHandler = (event) => {\r\n        setEmaiId(event.target.value);\r\n    }\r\n    const editActiveHandler = () => {\r\n        setIaActive(true);\r\n        setbtnActive(false);\r\n\r\n    }\r\n    function saveEditHandler(keyVal) {\r\n        const newObj = {\r\n            id: keyVal,\r\n            first_name: fstName,\r\n            last_name: lstName,\r\n            email: emailId,\r\n        }\r\n        console.log(oldData)\r\n        // oldData\r\n        const index = oldData.findIndex((el) => {return el.id == keyVal});\r\n        // const newData = oldData;\r\n        oldData[index] = newObj\r\n        dispatch({\r\n            type: 'UPDATE_ITEM', editedData: newObj\r\n        });\r\n        setIaActive(true);\r\n        setbtnActive(false);\r\n    }\r\n\r\n    return (<>\r\n        <ul key={keyVal}>\r\n            <div className='showdata-item' >\r\n                {/* isActive */}\r\n                <div className=\"new-newdata__controls\" onClick={editActiveHandler}>\r\n                    <div className=\"new-newdata__control\">\r\n                        <input type=\"text\" value={fstName} readOnly={isActive ? false : true} onChange={editFirstNameHandler} />\r\n                    </div>\r\n                    <div className=\"new-newdata__control\">\r\n                        <input type=\"text\" value={lstName} readOnly={isActive ? false : true} onChange={editLastNameHandler} />\r\n                    </div>\r\n                    <div className=\"new-newdata__control\">\r\n                        <input type=\"email\" value={emailId} readOnly={isActive ? false : true} onChange={editEmailHandler} />\r\n                    </div>\r\n                </div>\r\n                {isActive && !btnActive && <button className='showdata-item__btnBlue' style={{}} onClick={() => saveEditHandler(keyVal)} >Save</button>}\r\n                {isActive && !btnActive && <button className='showdata-item__btnRed' onClick={cancelEditHandler} >Cancel</button>}\r\n                {!isActive && btnActive && <button className='showdata-item__btnRed' onClick={() => removeHandler(keyVal)} >Delete</button>}\r\n            </div>\r\n        </ul>\r\n\r\n    </>);\r\n}\r\nexport default ListData;\r\n\r\n"]},"metadata":{},"sourceType":"module"}