{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ashis\\\\Desktop\\\\ReactJs_Pract\\\\crude_app\\\\src\\\\Components\\\\ShowData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport ListData from './ListData';\nimport './ShowData.css';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShowData = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const isFirstCall = useSelector(state => state.isFirstCall);\n  useEffect(() => {\n    const getData = async () => {\n      dispatch({\n        type: 'FIRSTCALL',\n        isFirstCall: false\n      });\n      await axios.get(\"https://reqres.in/api/users\").then(data => {\n        dispatch({\n          type: 'DATA_RECEIVED',\n          items: data.data.data\n        });\n      }).catch(err => {\n        console.log(\"Err: \", err);\n      });\n    }; // getData();\n\n\n    isFirstCall ? getData() : console.log(\"\");\n  }, []);\n  const infoList = useSelector(state => state.data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: infoList.map(element => /*#__PURE__*/_jsxDEV(ListData, {\n      keyId: element.id,\n      firstName: element.first_name,\n      lastName: element.last_name,\n      emailData: element.email,\n      rawData: infoList\n    }, element.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 35\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShowData, \"uk9XlE0RJO6ekYE+tlfmCCiuAao=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ShowData;\nexport default ShowData;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowData\");","map":{"version":3,"sources":["C:/Users/Ashis/Desktop/ReactJs_Pract/crude_app/src/Components/ShowData.js"],"names":["React","useEffect","ListData","useSelector","useDispatch","axios","ShowData","dispatch","isFirstCall","state","getData","type","get","then","data","items","catch","err","console","log","infoList","map","element","id","first_name","last_name","email"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,gBAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAMI,WAAW,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACD,WAAlB,CAA/B;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,OAAO,GAAG,YAAY;AAC1BH,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAE,WAAR;AAAqBH,QAAAA,WAAW,EAAE;AAAlC,OAAD,CAAR;AACA,YAAMH,KAAK,CACRO,GADG,CACC,6BADD,EAEHC,IAFG,CAEGC,IAAD,IAAU;AACdP,QAAAA,QAAQ,CAAC;AACPI,UAAAA,IAAI,EAAE,eADC;AACgBI,UAAAA,KAAK,EAAED,IAAI,CAACA,IAAL,CAAUA;AADjC,SAAD,CAAR;AAGD,OANG,EAOHE,KAPG,CAOIC,GAAD,IAAS;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,GAArB;AACD,OATG,CAAN;AAUD,KAZD,CADc,CAcd;;;AACAT,IAAAA,WAAW,GAAGE,OAAO,EAAV,GAAeQ,OAAO,CAACC,GAAR,CAAY,EAAZ,CAA1B;AACD,GAhBQ,EAgBN,EAhBM,CAAT;AAiBA,QAAMC,QAAQ,GAAGjB,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACK,IAAlB,CAA5B;AACA,sBACE;AAAA,cACGM,QAAQ,CAACC,GAAT,CAAcC,OAAD,iBAAc,QAAC,QAAD;AAA2B,MAAA,KAAK,EAAEA,OAAO,CAACC,EAA1C;AAC1B,MAAA,SAAS,EAAED,OAAO,CAACE,UADO;AACK,MAAA,QAAQ,EAAEF,OAAO,CAACG,SADvB;AACkC,MAAA,SAAS,EAAEH,OAAO,CAACI,KADrD;AAC4D,MAAA,OAAO,EAAEN;AADrE,OAAeE,OAAO,CAACC,EAAvB;AAAA;AAAA;AAAA;AAAA,YAA3B;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA7BD;;GAAMjB,Q;UACaF,W,EACGD,W,EAmBHA,W;;;KArBbG,Q;AA8BN,eAAeA,QAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport ListData from './ListData'\r\nimport './ShowData.css'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nconst ShowData = () => {\r\n  const dispatch = useDispatch();\r\n  const isFirstCall = useSelector((state) => state.isFirstCall);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      dispatch({ type: 'FIRSTCALL', isFirstCall: false })\r\n      await axios\r\n        .get(\"https://reqres.in/api/users\")\r\n        .then((data) => {\r\n          dispatch({\r\n            type: 'DATA_RECEIVED', items: data.data.data\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"Err: \", err);\r\n        });\r\n    };\r\n    // getData();\r\n    isFirstCall ? getData() : console.log(\"\");\r\n  }, [])\r\n  const infoList = useSelector((state) => state.data);\r\n  return (\r\n    <div>\r\n      {infoList.map((element) => (<ListData key={element.id} keyId={element.id}\r\n        firstName={element.first_name} lastName={element.last_name} emailData={element.email} rawData={infoList}\r\n      />))}\r\n    </div>\r\n  )\r\n}\r\nexport default ShowData;\r\n"]},"metadata":{},"sourceType":"module"}